{"version":3,"sources":["Components/Header.js","Components/SideBar.js","Components/SubContents.js","Components/Advert.js","Components/Main.js","Components/Alpha.js","Components/Beta.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","backgroundColor","height","display","margin","Component","SideBar","width","verticalAlign","marginRight","react_router_dom","to","SubContents","Advert","Main","paddingLeft","Components_SubContents","Components_Advert","Alpha","componentDidMount","Beta","App","minHeight","padding","Components_Header","Components_SideBar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4MAWeA,mLAPX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,gBAAiB,UAAWC,OAAQ,QAASC,QAAS,QAASC,OAAQ,uBAHrEC,qBCsBNC,mLAnBX,OACET,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,eACTI,MAAO,QACPC,cAAe,MACfC,YAAa,SAEbZ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,KAAT,SACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,UAAT,UACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,SAAT,kBAdMN,aCePO,mLAdX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,eACTI,MAAO,QACPC,cAAe,MACfJ,OAAQ,0BATUC,aCaXQ,mLAXX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRE,OAAQ,0BANKC,aCsBNS,mLAlBX,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,eACTI,MAAO,QACPC,cAAe,MACfO,YAAa,SAEblB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,cAdWZ,aCsBJa,6MArBbC,kBAAoB,qFAKlB,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,eACTI,MAAO,QACPC,cAAe,MACfO,YAAa,SAEblB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACiB,EAAD,cAjBYX,aCmBLe,mLAjBX,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,eACTI,MAAO,QACPC,cAAe,MACfO,YAAa,SAEblB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACkB,EAAD,cAbWZ,qBC4BJgB,mLApBX,OACExB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,gBAAiB,OACjBqB,UAAW,QACXf,MAAO,QACPgB,QAAS,OACTnB,OAAQ,WAERP,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjCjB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWX,IAChCrB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWT,aAfvBf,aCGEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.912aa253.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div style={{backgroundColor: \"#6aa84f\", height: \"100px\", display: \"block\", margin: \"0 0 20px 0\"}}>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass SideBar extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#6fa8dc\", \n        height: \"320px\", \n        display: \"inline-block\", \n        width: \"200px\",\n        verticalAlign: \"top\",\n        marginRight: \"20px\"\n      }}>\n        <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/alpha\">Alpha</Link></li>\n            <li><Link to=\"/beta\">Beta</Link></li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default SideBar;","import React, { Component } from 'react';\n\nclass SubContents extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#ffd996\", \n        height: \"300px\", \n        display: \"inline-block\", \n        width: \"220px\",\n        verticalAlign: \"top\",\n        margin: \"20px 20px 0 0\"\n      }}>\n      </div>\n    )\n  }\n}\n\nexport default SubContents;","import React, { Component } from 'react';\n\nclass Advert extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#b4a7d6\", \n        height: \"100px\",\n        margin: \"20px 20px 0 0\"\n      }}>\n      </div>\n    )\n  }\n}\n\nexport default Advert;","import React, { Component } from 'react';\nimport SubContents from './SubContents';\nimport Advert from './Advert';\n\nclass Main extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#e06666\", \n        height: \"500px\", \n        display: \"inline-block\", \n        width: \"720px\",\n        verticalAlign: \"top\",\n        paddingLeft: \"20px\"\n      }}>\n        <SubContents />\n        <SubContents />\n        <SubContents />\n        <Advert />\n      </div>\n    )\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport SubContents from './SubContents';\n\nclass Alpha extends Component {\n\n  componentDidMount = () => {\n    // alert(\"Alpha is here\");\n  }\n\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#e06666\", \n        height: \"500px\", \n        display: \"inline-block\", \n        width: \"720px\",\n        verticalAlign: \"top\",\n        paddingLeft: \"20px\"\n      }}>\n        <SubContents />\n        <SubContents />\n      </div>\n    )\n  }\n}\n\nexport default Alpha;\n","import React, { Component } from 'react';\nimport Advert from './Advert';\n\nclass Beta extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#e06666\", \n        height: \"500px\", \n        display: \"inline-block\", \n        width: \"720px\",\n        verticalAlign: \"top\",\n        paddingLeft: \"20px\"\n      }}>\n        <Advert />\n        <Advert />\n        <Advert />\n      </div>\n    )\n  }\n}\n\nexport default Beta;","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport SideBar from './Components/SideBar';\nimport Main from './Components/Main';\nimport Alpha from './Components/Alpha';\nimport Beta from './Components/Beta';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div style={{\n          backgroundColor: \"#ddd\", \n          minHeight: \"500px\",\n          width: \"960px\",\n          padding: \"20px\",\n          margin: \"0 auto\"\n        }}>\n          <Header />\n          <SideBar />\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/alpha\" component={Alpha} />                    \n          <Route path=\"/beta\" component={Beta} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}